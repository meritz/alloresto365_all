{"version":3,"sources":["webpack:///./src/app/cart/cart.module.ts","webpack:///./src/app/cart/cart.page.html","webpack:///./src/app/cart/cart.page.scss","webpack:///./src/app/cart/cart.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEN;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAWF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB3B,gaAAga,cAAc,IAAI,aAAa,KAAK,wCAAwC,mDAAmD,uDAAuD,qGAAqG,mCAAmC,uM;;;;;;;;;;;ACA9tB,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACI;AACP;AAO/C;IAKE,kBAAoB,WAAwB,EAAS,OAAsB;QAAvD,gBAAW,GAAX,WAAW,CAAa;QAAS,YAAO,GAAP,OAAO,CAAe;QAJ3E,kBAAa,GAAG,EAAE,CAAC;QAEnB,UAAK,GAAG,CAAC,CAAC;IAEqE,CAAC;IAEhF,2BAAQ,GAAR;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QACvC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAgB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;YAAlB,IAAI,GAAG;YACV,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBACpB,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;aAC1B;iBAAM;gBACL,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,gBAAO,GAAG,IAAE,KAAK,EAAE,CAAC,GAAC,CAAC;aACvC;SACF;QACD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,eAAQ,CAAC,GAAG,CAAC,EAAb,CAAa,CAAE,CAAC;QACtE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,EAAvB,CAAuB,EAAE,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,6BAAU,GAAV;QACE,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,IAAI,IAAI,EAAG;YACT,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;SAC5C;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACzC;IACH,CAAC;IAED,6BAAU,GAAV,UAAW,GAAG;IAEd,CAAC;IAhCU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,sFAA+B;;SAEhC,CAAC;yCAMiC,iEAAW,EAAkB,4DAAa;OALhE,QAAQ,CAkCpB;IAAD,eAAC;CAAA;AAlCoB","file":"cart-cart-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CartPage } from './cart.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CartPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CartPage]\n})\nexport class CartPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n          </ion-buttons>\\n          <ion-title>Cart</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content padding>\\n  \\n      <ion-list>\\n          <ion-item *ngFor=\\\"let item of selectedItems\\\" lines=\\\"inset\\\">\\n            {{ item.count }}x {{ item.name }} - {{ item.price | currency:'XOF':'symbol' }}\\n            <ion-label slot=\\\"end\\\" text-right>{{ (item.price * item.count) | currency:'XOF':'symbol' }}</ion-label>\\n          </ion-item>\\n\\n          <ion-item>\\n            Total: <span slot=\\\"end\\\">{{ total | currency:'XOF':'symbol' }}</span>\\n          </ion-item>\\n        </ion-list>\\n  \\n  </ion-content>\\n  <ion-footer>\\n      <ion-button expand=\\\"full\\\" (click) = \\\"onPayement( total)\\\" >valider</ion-button>\\n  </ion-footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnQvY2FydC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../service/cart.service';\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.page.html',\n  styleUrls: ['./cart.page.scss'],\n})\nexport class CartPage implements OnInit {\n  selectedItems = [];\n\n  total = 0;\n\n  constructor(private cartService: CartService, public navCtrl: NavController) { }\n\n  ngOnInit() {\n    let items = this.cartService.getCart();\n    let selected = {};\n    for (let obj of items) {\n      if (selected[obj.id]) {\n        selected[obj.id].count++;\n      } else {\n        selected[obj.id] = {...obj, count: 1};\n      }\n    }\n    this.selectedItems = Object.keys(selected).map(key => selected[key] );\n    this.total = this.selectedItems.reduce((a, b) => a + (b.count * b.price), 0);\n  }\n\n  onPayement() {\n    var user = false;\n    if (user ) {\n      this.navCtrl.navigateForward(['payement']);\n    } else {\n      this.navCtrl.navigateForward(['login']);\n    }\n  }\n\n  removeItem(itm) {\n    \n  }\n\n}\n"],"sourceRoot":""}